{"version":3,"sources":["EditorContext.js","components/markdowninput.jsx","components/output.jsx","components/Element.jsx","cheatsheet.js","components/cheatSheetBox.jsx","components/speech.jsx","App.js","index.js"],"names":["defaultContext","markdownText","setMarkdownText","React","createContext","Container","styled","div","Title","TextArea","textarea","MarkedInput","useContext","EditorContext","className","onChange","e","newValue","currentTarget","value","OutputArea","components","code","node","inline","children","props","match","exec","style","darcula","language","PreTag","String","replace","Output","plugins","gfm","remarkMath","rehypePlugins","rehypeKatex","rehypeRaw","Element","id","element","syntax","data","Modal","setAppElement","CheatSheetBox","openBox","setOpenBox","resetTranscript","useState","isModalOpen","setIsModalOpen","closeModal","isOpen","onRequestClose","bodyOpenClassName","map","ele","onClick","Speech","tip","setTip","commands","command","callback","setTimeout","matchInterim","useSpeechRecognition","transcript","listening","browserSupportsSpeechRecognition","SpeechRecognition","startListening","stopListening","AppContainer","EditorContainer","Footer","App","contextValue","Provider","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c9e35801.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst defaultContext = {\r\n    markdownText: \"\",\r\n    setMarkdownText: () => {}\r\n};\r\n\r\nexport default React.createContext(defaultContext);\r\n","import React, { useContext } from 'react';\r\nimport styled from 'styled-components';\r\nimport EditorContext from '../EditorContext';\r\n\r\nconst Container = styled.div`\r\n    width: 45%;\r\n    height: 90%;\r\n    padding: 16px;\r\n    font-family: 'Lato',sans-serif;\r\n    background: #fff;\r\n    box-shadow: 0 10px 10px 0 rgb(0, 0, 0, 0.22), 0px 27px 24px 0 rgb(0, 0, 0, 0.22);\r\n`;\r\n\r\nconst Title = styled.div`\r\n    font-size: 22px;\r\n    font-weight: 600;\r\n    margin-bottom: 1em;\r\n    color: #7ed8f3;\r\n    border-bottom: 1px solid #7ed8f3;\r\n`;\r\n\r\nconst TextArea = styled.textarea`\r\n    width: 100%;\r\n    height: 80%;\r\n    resize: none;\r\n    border: none;\r\n    outline: none;\r\n    padding: 4px 0px 0xp 4px;\r\n    overflow: scroll scroll;\r\n    font-size: 17px;\r\n`;\r\n\r\nexport function MarkedInput() {\r\n\r\n    const { setMarkdownText } = useContext(EditorContext);\r\n\r\n    const onInputChange = e => {\r\n        const newValue = e.currentTarget.value;\r\n        setMarkdownText(newValue);\r\n    }\r\n\r\n    return (\r\n        <Container className=\"markdown_input\">\r\n            <Title>Markdown Text</Title>\r\n            <TextArea onChange={onInputChange}/>\r\n        </Container>\r\n    )\r\n};\r\n\r\n","import React, { useContext } from 'react';\r\nimport styled from 'styled-components';\r\nimport ReactMarkdown from 'react-markdown';\r\nimport gfm from 'remark-gfm'\r\nimport EditorContext from '../EditorContext';\r\nimport {Prism as SyntaxHighlighter} from 'react-syntax-highlighter'\r\nimport {darcula} from 'react-syntax-highlighter/dist/esm/styles/prism'\r\nimport remarkMath from 'remark-math'\r\nimport rehypeKatex from 'rehype-katex'\r\nimport rehypeRaw from 'rehype-raw'\r\nimport 'katex/dist/katex.min.css'\r\n\r\nconst Container = styled.div`\r\n    width: 45%;\r\n    height: 90%;\r\n    padding: 16px;\r\n    font-family: 'Lato',sans-serif;\r\n    background: #fff;\r\n    box-shadow: 0 10px 10px 0 rgb(0, 0, 0, 0.22), 0px 27px 24px 0 rgb(0, 0, 0, 0.22);\r\n`;\r\n\r\nconst Title = styled.div`\r\n    font-size: 22px;\r\n    font-weight: 600;\r\n    margin-bottom: 1em;\r\n    color: #7ed8f3;\r\n    border-bottom: 1px solid #7ed8f3;\r\n`;\r\n\r\nconst OutputArea = styled.div`\r\n    width: 100%;\r\n    height: 80%;\r\n    resize: none;\r\n    border: none;\r\n    overflow: scroll;\r\n    padding: 0px 20px;   \r\n    font-size: 17px;\r\n    background: #fff;\r\n`;\r\n\r\nconst components = {\r\n    code({node, inline, className, children, ...props}) {\r\n      const match = /language-(\\w+)/.exec(className || '')\r\n      return !inline && match ? (\r\n        <SyntaxHighlighter style={darcula} language={match[1]} PreTag=\"div\" children={String(children).replace(/\\n$/, '')} {...props} />\r\n      ) : (\r\n        <code className={className} {...props}>\r\n          {children}\r\n        </code>\r\n      )\r\n    }\r\n  }\r\n\r\nexport function Output() {\r\n\r\n    const { markdownText } = useContext(EditorContext);\r\n    return ( \r\n    <Container className=\"output_area\">\r\n        <Title>Output Text</Title>\r\n        <OutputArea>\r\n            <ReactMarkdown \r\n                plugins={[gfm, remarkMath]} \r\n                rehypePlugins={[rehypeKatex, rehypeRaw]}\r\n                children={markdownText} \r\n                components={components} />\r\n        </OutputArea>\r\n    </Container>\r\n    )\r\n};\r\n\r\n","import React from 'react';\r\n\r\nconst Element = ({ id, element, syntax }) => {\r\n \r\n    return (\r\n        <div>\r\n            <h4><em>{element}:</em></h4>\r\n            <h5>{syntax}</h5>\r\n            <br/>\r\n        </div>\r\n    );\r\n\r\n};\r\n\r\nexport default Element;","const data =[\r\n    {\r\n        \"id\":\"01\",\r\n        \"element\": \"Blockquotes\",\r\n        \"syntax\": \"> blockquote\"\r\n    },\r\n    {\r\n        \"id\": \"02\",\r\n        \"element\": \"Bold\",\r\n        \"syntax\": \"**bold text**\"\r\n    },\r\n    {\r\n        \"id\": \"03\",\r\n        \"element\": \"Code\",\r\n        \"syntax\": \"`code`\"\r\n    },\r\n    {\r\n        \"id\": \"1\",\r\n        \"element\": \"Headings\",\r\n        \"syntax\": \"# H1\\n## H2\\n### H3\\n\"\r\n    },\r\n    {\r\n        \"id\": \"2\",\r\n        \"element\": \"Horizontal Rules\",\r\n        \"syntax\": \"---\"\r\n    },\r\n    {\r\n        \"id\": \"3\",\r\n        \"element\": \"Images\",\r\n        \"syntax\": \"![alt text](image.jpg)\"\r\n    },\r\n    {\r\n        \"id\": \"4\",\r\n        \"element\": \"Italic\",\r\n        \"syntax\": \"*italicized text*\"\r\n    },\r\n    {\r\n        \"id\": \"5\",\r\n        \"element\": \"Links\",\r\n        \"syntax\": \"[link name](https://www.example.com)\"\r\n    },\r\n    {\r\n        \"id\": \"6\",\r\n        \"element\": \"Ordered Lists\",\r\n        \"syntax\": \"1. First item\\n2. Second item\\n3. Third item\\n\"\r\n    },\r\n    {\r\n        \"id\": \"7\",\r\n        \"element\": \"Unordered Lists\",\r\n        \"syntax\": \"- First item\\n- Second item\\n- Third item\\n\"\r\n    },\r\n    {\r\n        \"id\": \"8\",\r\n        \"element\": \"Definition Lists\",\r\n        \"syntax\": \"term\\n: definition\\n\"\r\n    },\r\n    {\r\n        \"id\": \"9\",\r\n        \"element\": \"Fenced Code Blocks\",\r\n        \"syntax\": \"```\\n{\\n\\\"firstName\\\": \\\"John\\\",\\n\\\"lastName\\\": \\\"Smith\\\",\\n\\\"age\\\": 25\\n}\\n```\\n\"\r\n    },\r\n    {\r\n        \"id\": \"10\",\r\n        \"element\": \"Footnotes\",\r\n        \"syntax\": \"Here's a sentence with a footnote. [^1]\\n\\n[^1]: This is the footnote.\\n\"\r\n    },\r\n    {\r\n        \"id\": \"11\",\r\n        \"element\": \"Heading IDs\",\r\n        \"syntax\": \"### My Great Heading {#custom-id}\"\r\n    },\r\n    {\r\n        \"id\": \"12\",\r\n        \"element\": \"Strikethrough\",\r\n        \"syntax\": \"~~The world is flat.~~\"\r\n    },\r\n    {\r\n        \"id\": \"13\",\r\n        \"element\": \"Tables\",\r\n        \"syntax\": \"| Syntax | Description |\\n| ----------- | ----------- |\\n| Header | Title |\\n| Paragraph | Text |\\n\"\r\n    },\r\n    {\r\n        \"id\": \"14\",\r\n        \"element\": \"Task Lists\",\r\n        \"syntax\": \"- [x] Write the press release\\n- [ ] Update the website\\n- [ ] Contact the media\\n\"\r\n    }\r\n];\r\n\r\nexport default data;","import React, { useState} from 'react';\r\nimport Modal from 'react-modal';\r\nimport Element from './Element';\r\nimport data from '../cheatsheet';\r\n\r\nModal.setAppElement('#root');\r\nconst CheatSheetBox = ({openBox,setOpenBox, resetTranscript}) => {\r\n\r\n    const [isModalOpen,setIsModalOpen] = useState(openBox);\r\n\r\n    const closeModal = () => {\r\n        setIsModalOpen(false);\r\n        setOpenBox(false);\r\n        resetTranscript();\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Modal\r\n                isOpen={isModalOpen}\r\n                onRequestClose={closeModal}\r\n                className=\"modal\"\r\n                bodyOpenClassName=\"show_modal\"\r\n                >\r\n                <div className=\"modal_box\">\r\n                    <div className=\"modal_title\">\r\n                        <h2 className=\"modal_title\">Hill CheatSheet Box</h2>\r\n                    </div>\r\n                    <div className=\"modal_content\">\r\n                        {\r\n                            data.map((ele) => {\r\n                                return <Element key={ele.id} {...ele}/>\r\n                            })\r\n                        }\r\n                    </div>\r\n                    <button onClick={closeModal} className=\"modal_button\">Close</button>\r\n                </div>\r\n            </Modal>\r\n        </div>\r\n    );\r\n\r\n};\r\n\r\nexport default CheatSheetBox;","import React, { useState } from 'react'\r\nimport SpeechRecognition, { useSpeechRecognition } from 'react-speech-recognition'\r\nimport CheatSheetBox from './cheatSheetBox'\r\n\r\nexport default function Speech() {\r\n\r\n  const [openBox, setOpenBox] = useState(false);\r\n  const [tip,setTip] = useState(true);\r\n  const commands = [\r\n    {\r\n      command: ['Oh yeah','open the box','Its magic'],\r\n      callback: ({ command }) => {\r\n        setTimeout(() => {\r\n          setOpenBox(true)\r\n        }, 2000);\r\n      },\r\n      matchInterim: true\r\n    },\r\n    {\r\n      command: 'clear',\r\n      callback: ({ resetTranscript }) => resetTranscript()\r\n    }\r\n  ]\r\n\r\n  const {\r\n    transcript,\r\n    listening,\r\n    resetTranscript,\r\n    browserSupportsSpeechRecognition\r\n  } = useSpeechRecognition({ commands });\r\n\r\n  const onVoice = () => {\r\n    setTip(false);\r\n    SpeechRecognition.startListening()\r\n  } \r\n\r\n  if (!browserSupportsSpeechRecognition) {\r\n    return <span>Browser doesn't support speech recognition.</span>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"menu\">\r\n      <strong>Hill Chat</strong>\r\n      <span>{listening ? 'on' : 'off'}</span>\r\n      <div className=\"btn_container\">\r\n      <button className=\"btn btn_start\" onClick={onVoice} >Start</button>\r\n      <button className=\"btn btn_stop\" onClick={SpeechRecognition.stopListening}>Stop</button>\r\n      <button className=\"btn btn_reset\" onClick={resetTranscript}>Reset</button>\r\n      </div>\r\n      { openBox && <CheatSheetBox openBox={openBox} setOpenBox={setOpenBox} resetTranscript={resetTranscript} /> }\r\n      <p>{transcript}</p>\r\n      { tip && <p><em>Say, \"Oh yeah or Open Box\" to Hill Chat.</em></p> }\r\n    </div>\r\n  );\r\n};\r\n","import React, {useState} from 'react';\nimport './styles.css';\nimport styled from 'styled-components';\nimport { MarkedInput } from './components/markdowninput';\nimport { Output } from './components/output';\nimport EditorContext from './EditorContext';\nimport Speech from './components/speech';\n\nconst AppContainer = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst Title = styled.div`\n  font-size: 36px;\n  font-weight: 700;\n  font-family: 'Lato',sans-serif;\n  margin: 20px 0;\n  color: #fff;\n  border: 2px solid #fff;\n  text-transform: uppercase;\n  padding: 10px 24px;\n`;\n\nconst EditorContainer = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  justify-content: space-around;\n`;\n\nconst Footer = styled.div`\n  width: 100%;\n  height: 40px;\n  text-align: center;\n  padding: 5px 0px 10px 0px;\n  font-weight: 450;\n`;\n\nfunction App() {\n\n  const [markdownText, setMarkdownText] = useState(\"\");\n\n  const contextValue = {\n    markdownText,\n    setMarkdownText\n  };\n\n  return (\n    <EditorContext.Provider value={contextValue}>\n      <AppContainer className=\"app_container\">\n        <Title className=\"heading\"> 🚵‍♀️ Markdown Hill 🚵‍♂️ </Title>\n        <EditorContainer className=\"editor_container\">\n          <MarkedInput />\n          <Speech/>\n          <Output />\n        </EditorContainer>\n        <Footer>Built by Abhishek Maran</Footer>\n      </AppContainer>\n    </EditorContext.Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}